@page "/{WordSlug}"
@inject HttpClient Http
@using System.Net

@code {
    [Parameter]
    public string? WordSlug { get; set; }
    private WordDefinition[] words;
    private WordDefinition? definition;
    protected override async Task OnParametersSetAsync()
    {
        var Word = WebUtility.UrlDecode(WordSlug).Replace("-", " ").Replace("__", "-");
        definition = await
        Http.GetFromJsonAsync<WordDefinition>($"https://clouddictionary.azurewebsites.net/api/GetDefinitionByWord?code=ZaYPEsrv8ycB83xO9TcjhsVl8F5fiCQ24xiBRP7mV0X9AzFuj4-_BQ==&word={Word}");

        words = await
        Http.GetFromJsonAsync<WordDefinition[]>($"https://clouddictionary.azurewebsites.net/api/GetDefinitionsByTag?code=oc84h9mpvgySd_8EUxy8rzp-AA5M_DhyOTB1_QoNr5ksAzFuDrMJSQ==&tag={definition?.Tag}&batchSize=10")
        ?? new WordDefinition[] { };

        //https://clouddictionary.azurewebsites.net/api/GetDefinitionsByTag?code=oc84h9mpvgySd_8EUxy8rzp-AA5M_DhyOTB1_QoNr5ksAzFuDrMJSQ==

    }
}


@if (definition == null)
{
    <MudContainer Class="mt-16">
        <MudProgressLinear Color="MudBlazor.Color.Primary" Indeterminate="true" Class="my-4" />
    </MudContainer>
}
else
{

    <MudContainer Class="mt-8">



        <MudCard>
            <MudCardHeader>
                <CardHeaderContent>
                    <MudText Typo="Typo.h3" Align="Align.Center">@definition.Word.ToLower()</MudText>
                    @if (definition.Abbreviation != definition.Word)
                    {
                        <MudText Typo="Typo.h5" Align="Align.Center">@definition.Abbreviation</MudText>
                    }
                    
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText>@definition.Content</MudText>
                <MudDivider DividerType="DividerType.Middle" Class="my-6" />
                <MudChip Icon="@Icons.Material.Filled.Tag" Label="true" Color="Color.Primary">@definition.Tag</MudChip>
            </MudCardContent>
            <MudCardActions>
                <MudButton Variant="Variant.Text" Color="Color.Primary" Link="@($"{definition.LearnMoreUrl}")">Read More
                </MudButton>
                <MudButton Variant="Variant.Text" Color="Color.Secondary" Link="@($"{definition.Author.Link}")">@definition.Author.Name
                </MudButton>
            </MudCardActions>
        </MudCard>


    </MudContainer>














    <MudContainer Class="mt-16">

        <div class="d-flex justify-center">

            <MudText Typo="Typo.h5" Class="ml-1 mt-5" Color="Color.Default">Here are some more words with this tag</MudText>
        </div>

        <MudGrid Class="mt-8">
            @foreach (var word in words)
            {
                var wordSlug = WebUtility.UrlEncode(word.Word.Replace("-", "__").Replace(" ", "-"));
                <MudItem xs="12" sm="6" md="4">
                    <MudCard>
                        <MudCardContent>
                            <MudText Typo="Typo.h6" Class="my-5" Align="Align.Center" Color="Color.Default">
                                <MudLink Href="@($"/{wordSlug}")" Underline="Underline.Hover" Typo="Typo.h6"
                                    Color="Color.Default">@word.Word</MudLink>
                            </MudText>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    </MudContainer>
}