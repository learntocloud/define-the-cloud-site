@page "/{WordSlug}"
@inject HttpClient Http
@using System.Net

@code {
    [Parameter]
    public string? WordSlug { get; set; }
    private WordDefinition[] words;
    private WordDefinition? definition;
    protected override async Task OnParametersSetAsync()
    {
        var Word = WebUtility.UrlDecode(WordSlug).Replace("-", " ").Replace("__", "-");
        definition = await
        Http.GetFromJsonAsync<WordDefinition>($"https://clouddictionary.azurewebsites.net/api/GetDefinitionByWord?code=ZaYPEsrv8ycB83xO9TcjhsVl8F5fiCQ24xiBRP7mV0X9AzFuj4-_BQ==&word={Word}");

        words = await
        Http.GetFromJsonAsync<WordDefinition[]>($"https://clouddictionary.azurewebsites.net/api/GetDefinitionsByTag?code=oc84h9mpvgySd_8EUxy8rzp-AA5M_DhyOTB1_QoNr5ksAzFuDrMJSQ==&tag={definition?.Tag}&batchSize=10")
        ?? new WordDefinition[] { };

        //https://clouddictionary.azurewebsites.net/api/GetDefinitionsByTag?code=oc84h9mpvgySd_8EUxy8rzp-AA5M_DhyOTB1_QoNr5ksAzFuDrMJSQ==

    }
}


@if (definition == null)
{
    <MudContainer Class="mt-16">
        <MudProgressLinear Color="MudBlazor.Color.Primary" Indeterminate="true" Class="my-4" />
    </MudContainer>
}
else
{

    <MudContainer Class="mt-16">


        <MudText Typo="Typo.h2" Align="Align.Left">@definition.Word.ToLower()</MudText>
        @if (definition.Abbreviation != definition.Word)
        {
            <MudText Typo="Typo.h6" Align="Align.Left" GutterBottom="true">@definition.Abbreviation.ToLower()</MudText>
        }
    

    
        <MudLink Href="@($"{definition.Author.Link}")" Color="MudBlazor.Color.Secondary" Underline="Underline.Always">@definition.Author.Name</MudLink>
        
     
        <MudText Align="Align.Justify" GutterBottom="true">@definition.Content</MudText>

        <MudLink Href="@($"{definition.LearnMoreUrl}")">Learn More</MudLink>

        <MudDivider DividerType="DividerType.FullWidth" Class="mt-4"/>

  
        <div class="d-flex justify-left">

            <MudText Typo="Typo.h4" Class="ml-1 mt-5" Color="Color.Default"> explore more:
            </MudText>
        </div>

        <MudGrid Class="mt-2">
            

            @foreach (var word in words)
            {
                var wordSlug = WebUtility.UrlEncode(word.Word.Replace("-", "__").Replace(" ", "-"));
                <MudItem xs="12" sm="6" md="4">
                    
                            <MudText Class="my-2" Align="Align.Center" Color="Color.Default">
                                <MudLink Href="@($"/{wordSlug}")" Underline="Underline.Hover" 
                                    Color="Color.Default" Typo="Typo.h6">@word.Word.ToLower()</MudLink>
                            </MudText>
                        
                </MudItem>
            }
        </MudGrid>
    </MudContainer>
}